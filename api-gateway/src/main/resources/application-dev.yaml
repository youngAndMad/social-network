server:
  port: 8082
  servlet:
    session:
      cookie:
        name: GATEWAY-CLIENT
  netty:
    max-initial-line-length: 10MB
spring:
  main:
    web-application-type: reactive
    banner-mode: off
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: qr-service
          uri: http://qr-service:7070
          predicates:
            - Path=/api/v1/qr/**
          filters:
        #            - TokenRelay=
        - id: news-service
          uri: http://news-service:8888
          predicates:
            - Path=/api/v1/news/**
          filters:
        #            - TokenRelay=
        - id: storage-service
          uri: http://storage-service:7070
          predicates:
            - Path=/api/v1/file/**
          filters:
        #            - TokenRelay=
        - id: user-service
          uri: http://user-service:8083
          predicates:
            - Path=/api/v1/user/**
          filters:
        #            - TokenRelay=
        - id: post-service
          uri: http://localhost:1212
          predicates:
            - Path=/api/v1/post-service/**
          filters:
  #            - TokenRelay=
  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: ${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/auth
            token-uri: ${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/token
            jwk-set-uri: ${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/certs
            user-info-uri: ${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/userinfo
            user-name-attribute: sub
            issuer-uri: ${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp
        registration:
          reg-client:
            provider: keycloak
            client-id: socialapp-web
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope: openid
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  data:
    redis:
      host: localhost
      port: 6379
      password: qwerfvp.o654ijnQWE.RFVP654O.IJN
  session:
    redis:
      flush-mode: on_save # session refresh mode
      namespace: gateway:session # namespace for keys used to store sessions
logging:
  level:
    org.springframework:
      cloud.gateway: debug
      web: debug
      security: debug
